// -*- C++ -*-
// -*- coding: utf-8 -*-
//
// michael a.g. aïvázis
// orthologue
// (c) 1998-2020 all rights reserved
//

// code guard
#if !defined(pyre_grid_ConstView_icc)
#error This header file contains implementation details of class pyre::grid::ConstView
#endif


// meta-methods
template <typename gridT>
pyre::grid::ConstView<gridT>::
ConstView(const grid_type & grid, const slice_type & slice) :
    _grid(grid),
    _slice(slice)
{}


// interface
template <typename gridT>
const auto &
pyre::grid::ConstView<gridT>::
low() const {
    // easy
    return _slice.low();
}


template <typename gridT>
const auto &
pyre::grid::ConstView<gridT>::
high() const {
    // easy
    return _slice.high();
}


template <typename gridT>
const auto &
pyre::grid::ConstView<gridT>::
slice() const {
    // easy
    return _slice;
}


template <typename gridT>
auto
pyre::grid::ConstView<gridT>::
layout() const {
    // easy
    return layout_type(_slice.shape(), _slice.packing());
}


template <typename gridT>
auto
pyre::grid::ConstView<gridT>::
begin() const {
    // easy enough...
    return iterator_type(_grid, _slice.begin());
}


template <typename gridT>
auto
pyre::grid::ConstView<gridT>::
end() const {
    // easy enough...
    return iterator_type(_grid, _slice.end());
}


// end of file
