// -*- C++ -*-
// -*- coding: utf-8 -*-
//
// michael a.g. aïvázis
// orthologue
// (c) 1998-2019 all rights reserved
//

// code guard
#if !defined(pyre_grid_ConstGridIterator_icc)
#error This header file contains implementation details of class pyre::grid::ConstGridIterator
#endif


// meta-methods
template <typename gridT>
pyre::grid::ConstGridIterator<gridT>::
ConstGridIterator(const grid_type & grid, const iterator_type & iterator) :
    _grid(grid),
    _iterator(iterator)
{}


// interface
// access to the current value
template <typename gridT>
const auto &
pyre::grid::ConstGridIterator<gridT>::
operator* () const {
    // return the current value
    return _grid[*_iterator];
}


// value update
template <typename gridT>
auto &
pyre::grid::ConstGridIterator<gridT>::
operator++ () {
    // update the underlying iterator
    ++_iterator;
    // and that's all
    return *this;
}


// iterator access
template <typename gridT>
const auto &
pyre::grid::ConstGridIterator<gridT>::
iterator() const {
    // easy enough
    return _iterator;
}


// operators on indices
template <typename gridT>
auto
pyre::grid::
operator==(const ConstGridIterator<gridT> & left, const ConstGridIterator<gridT> & right) {
    // delegate to the standard algorithm
    return left.iterator() == right.iterator();
}


template <typename gridT>
auto
pyre::grid::
operator!=(const ConstGridIterator<gridT> & left, const ConstGridIterator<gridT> & right) {
    // easy enough
    return !(left == right);
}


// end of file
