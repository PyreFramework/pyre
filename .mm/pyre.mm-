# -*- Makefile -*-
#
# michael a.g. aïvázis
# orthologue
# (c) 1998-2020 all rights reserved
#


# if we have {cuda}, add it to the pile
${if ${findstring cuda,$(extern.available)},\
    ${eval pyre.packages += cuda.pkg} \
    ${eval pyre.extensions += cuda.ext} \
    ${eval cuda.libraries += cudart} \
,}

# if we have {libpq}, add it to the pile
${if ${findstring libpq,$(extern.available)}, \
    ${eval pyre.extensions += postgres.ext} \
}

# the pyre meta-data
host.ext.lib.c++.flags += $($(compiler.c++).std.c++17)
host.ext.lib.prerequisites += journal.lib # pyre.lib is added automatically
# postgres
postgres.ext.root := extensions/postgres/
postgres.ext.stem := postgres
postgres.ext.pkg := pyre.pkg
postgres.ext.wraps := pyre.lib
postgres.ext.capsule :=
postgres.ext.extern := pyre.lib journal.lib libpq python
postgres.ext.lib.c++.flags += $($(compiler.c++).std.c++17)
postgres.ext.lib.prerequisites += journal.lib # pyre.lib is added automatically
# timers
timers.ext.root := extensions/timers/
timers.ext.stem := timers
timers.ext.pkg := pyre.pkg
timers.ext.wraps := pyre.lib
timers.ext.capsule :=
timers.ext.extern := pyre.lib journal.lib python
timers.ext.lib.c++.flags += $($(compiler.c++).std.c++17)
timers.ext.lib.prerequisites += journal.lib # pyre.lib is added automatically

# cuda
# the package
cuda.pkg.root := packages/cuda/
cuda.pkg.stem := cuda
cuda.pkg.meta :=
cuda.pkg.ext :=
# the extension
cuda.ext.root := extensions/cuda/
cuda.ext.stem := cuda
cuda.ext.pkg := cuda.pkg
cuda.ext.wraps :=
cuda.ext.capsule :=
cuda.ext.extern := pyre.lib journal.lib cuda mpi python
cuda.ext.lib.c++.flags += $($(compiler.c++).std.c++17)
cuda.ext.lib.prerequisites += journal.lib pyre.lib # gsl.lib is added automatically

# mpi
# the package
mpi.pkg.root := packages/mpi/
mpi.pkg.stem := mpi
mpi.pkg.ext :=
# the library
mpi.lib.root := lib/mpi/
mpi.lib.stem := mpi
mpi.lib.extern := journal.lib mpi
mpi.lib.master := mpi.h
mpi.lib.incdir := $(builder.dest.inc)pyre/mpi/
mpi.lib.prerequisites += journal.lib
mpi.lib.c++.flags += $($(compiler.c++).std.c++17)
# the extension
mpi.ext.root := extensions/mpi/
mpi.ext.stem := mpi
mpi.ext.pkg := mpi.pkg
mpi.ext.wraps := mpi.lib
mpi.ext.extern := pyre.lib journal.lib mpi python
mpi.ext.lib.c++.flags += $($(compiler.c++).std.c++17)
mpi.ext.lib.prerequisites += journal.lib pyre.lib # mpi.lib is added automatically
# the tests
mpi.tst.libmpi.stem := mpi
mpi.tst.libmpi.extern := pyre.lib journal.lib mpi
mpi.tst.libmpi.prerequisites := mpi.lib
mpi.tst.libmpi.root := tests/libpyre/mpi/

# gsl
# the package
gsl.pkg.root := packages/gsl/
gsl.pkg.stem := gsl
gsl.pkg.meta :=
gsl.pkg.ext :=
# the extension
gsl.ext.root := extensions/gsl/
gsl.ext.stem := gsl
gsl.ext.pkg := gsl.pkg
gsl.ext.wraps :=
gsl.ext.capsule.destination := pyre/gsl/
gsl.ext.extern := pyre.lib journal.lib mpi.lib gsl mpi python numpy
gsl.ext.lib.c++.flags += $($(compiler.c++).std.c++17)
gsl.ext.lib.prerequisites += journal.lib pyre.lib mpi.ext # gsl.lib is added automatically
# the tests
gsl.tst.pkg.stem := gsl
gsl.tst.pkg.prerequisites := gsl.ext
gsl.tst.pkg.root := tests/gsl/

# the libpyre test suite
pyre.tst.libpyre.stem := libpyre
pyre.tst.libpyre.extern := pyre.lib pyre
pyre.tst.libpyre.prerequisites += pyre.lib

# the pyre package test suite
pyre.tst.pyre.stem := pyre
pyre.tst.pyre.prerequisites += pyre.pkg pyre.ext

# end of file
